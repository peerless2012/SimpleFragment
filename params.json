{"name":"Simplefragment","tagline":"Android中对于Fragment的更优雅的使用方式以及数据传递。","body":"---\r\n# SimpleFragment\r\nAndroid中对于Fragment的更优雅的使用方式以及数据传递。\r\n\r\n## 以TAB的方式切换Fragment\r\n  - 查找要显示的Fragment\r\n  - 如果不存在则创建新的并添加（add）进去\r\n  - 如果已经存在，则隐藏当前的Fragment,显示找到的Fragment\r\n\r\n        private Fragment preFragment;\r\n      \tprivate void changeFragment(String fragmentName,String tag,Bundle data) {\r\n      \t\t FragmentManager fragmentManager = getSupportFragmentManager();\r\n      \t\t Fragment currentFragment = fragmentManager.findFragmentByTag(tag);\r\n      \t\t if (currentFragment != null && currentFragment == preFragment) return;\r\n      \t\tFragmentTransaction transaction = fragmentManager.beginTransaction();\r\n      \t\tif (currentFragment == null) {\r\n      \t\t\tcurrentFragment = Fragment.instantiate(this, fragmentName, data);\r\n      \t\t\ttransaction.add(R.id.fragment_content, currentFragment, tag);\r\n      \t\t\tif (preFragment != null) {\r\n      \t\t\t\ttransaction.hide(preFragment);\r\n      \t\t\t}\r\n      \t\t}else {\r\n      \t\t\ttransaction.hide(preFragment);\r\n      \t\t\ttransaction.show(currentFragment);\r\n      \t\t}\r\n      \t\tpreFragment = currentFragment;\r\n      \t\ttransaction.commit();\r\n      \t}\r\n\r\n  切换的时候\r\n  \r\n        Bundle bundle3 = new Bundle();\r\n      \tbundle3.putString(TabFragment1.CONTENT, \"这是传递给第三个TabFragment的数据\");\r\n      \tchangeFragment(TabFragment3.class.getName(),TabFragment3.TAG, bundle3);\r\n\r\n## 以加入到后退栈的方式切换Fragment\r\n\r\n  - 以全屏的方式展示Fragment\r\n  - 加到回退栈中，模拟Activity的栈结构\r\n\r\n\r\n## 关于LayoutInflater中的inflate方法的介绍\r\n\r\n            public View inflate(@LayoutRes int resource, @Nullable ViewGroup root, boolean attachToRoot)\r\n\r\n- resource 布局资源的ID\r\n- root 把resource填充成View的时候参考的父布局\r\n    - 如果这个参数为空，那么把resource填充成view的时候，根元素的宽高等参数会不起作用，取而代之的是默认的参数（比如布局里面设置宽高是填充屏幕，但是加载的时候实际是包裹内容，即使把宽高这是成很高很高，也是没有什么卵用的）\r\n    - 如果传递的父View，那么填充的时候就会正常填充根元素的属性，不会出现异常。\r\n- attachToRoot 是否把填充的View添加到root上\r\n    - 在Fragment的onCreate方法中这个参数应该为false，我们应该返回填充的View，让Fragment自己去添加（在ListView中，Adapter的getView方法中，也是一样的道理，填充的时候设置为false，然后返回给ListView，让ListView自己去添加）。\r\n    - 在自定义ViewGroup的时候，这个可以设置为true，这样就不用自己手动去addView了。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}